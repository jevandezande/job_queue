#!/usr/bin/env python3

# Script prints out the queues in a nice format
import os
import sys
import time
import argparse

sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from job_queue.queues import Queues

parser = argparse.ArgumentParser(
    description="""\
Get information about the queues.

The header is interpreted as 'queue_name (#running_jobs/#slots/#queued_jobs)'
For PBS the #slots corresponds to the number of processors available, while
for SGE it corresponds to the number of nodes available.
"""
)
parser.add_argument("-n", "--number", help="The number of jobs to be output.", type=int, default=50)
parser.add_argument("-a", "--all", help="Print all jobs.", action="store_true", default=False)
parser.add_argument(
    "-u",
    "--user",
    const=True,
    default=False,
    type=str,
    nargs="?",
    help="Output only the jobs of the specified user (or current if none specified).",
)
parser.add_argument(
    "-w", "--watch", help="Update when jobs change.", action="store_true", default=False
)

args = parser.parse_args()

queues = Queues()
number = float("inf") if args.all else args.number
print(queues.print(numjobs=number, person=args.user))

if args.watch:
    for i in range(3600):
        # Check every second
        time.sleep(1)
        new_queues = Queues()
        if queues != new_queues:
            queues = new_queues
            print(queues.print(numjobs=number, person=args.user))
